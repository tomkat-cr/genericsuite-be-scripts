worker_processes 4;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Define HTTP server
    server {
        listen 80;
        server_name app.APP_NAME_LOWERCASE_placeholder.local; # Replace with your domain or IP address

        location / {
            # proxy_pass http://local-lambda-backend:8080; # Name of your Python backend container
            # proxy_pass http://local-api-gateway:8080; # Name of your Python backend container
            proxy_pass http://app.APP_NAME_LOWERCASE_placeholder.local:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    # Define HTTPS server
    server {
        listen 443 ssl;
        server_name app.APP_NAME_LOWERCASE_placeholder.local; # Replace with your domain or IP address

        ssl_certificate /etc/nginx/ssl/app.APP_NAME_LOWERCASE_placeholder.local.crt; # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/ssl/app.APP_NAME_LOWERCASE_placeholder.local.key; # Path to your SSL certificate key

        location / {
            # proxy_pass http://local-lambda-backend:8080; # Name of your Python backend container
            # proxy_pass http://local-api-gateway:8080; # Name of your Python backend container
            proxy_pass http://app.APP_NAME_LOWERCASE_placeholder.local:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
